# This is the backend configuration for the GitHub repository
backend:
  name: github
  repo: drai-inn/drai-docs
  branch: main
  auth_type: pat # Use modern, secure, serverless authentication

# This section controls the media library.
# By setting these top-level folders, we enable per-folder media libraries.
media_folder: 'static/img' # Default location for uploads not in a collection folder
public_folder: '/img'

# This section controls the editor UI
editor:
  preview: false # Disable the often-inaccurate live preview for a cleaner UI

# This enables a link to view the live page, a better preview method.
show_preview_links: true

# These are the "collections" of content that Decap CMS will manage.
collections:
  - name: 'blog'
    label: 'Blog'
    folder: 'blog'
    create: true
    # Modernizations to find all posts:
    extension: md
    format: frontmatter
    # extension: [md, mdx] # Look for both .md and .mdx files
    nested:
      depth: 2 # Look inside subfolders (e.g., blog/my-post/index.mdx)
    # This setting enables per-post media folders
    media_folder: '' # Store images relative to the entry
    public_folder: '' # The public path will also be relative
    slug: '{{year}}-{{month}}-{{day}}-{{slug}}'
    fields:
      - { label: 'Title', name: 'title', widget: 'string' }
      - { label: 'Authors', name: 'authors', widget: 'list' }
      - { label: 'Tags', name: 'tags', widget: 'list', required: false }
      - { label: 'Draft', name: 'draft', widget: 'boolean', default: false, required: false }
      - { label: 'Body', name: 'body', widget: 'markdown' }

  - name: 'docs'
    label: 'Documentation'
    folder: 'docs'
    create: true
    extension: md
    format: frontmatter
    # extension: [md, mdx] # Also allow .mdx for docs
    fields:
      - { label: 'Title', name: 'title', widget: 'string' }
      - { label: 'Sidebar Label', name: 'sidebar_label', widget: 'string', required: false }
      - { label: 'Body', name: 'body', widget: 'markdown' }

  - name: 'pages'
    label: 'Pages'
    # This is a "files" collection, for managing individual, standalone pages.
    # NOTE: This CANNOT edit React components like the homepage (src/pages/index.js).
    # It can only edit Markdown files.
    extension: md
    format: frontmatter
    files:
      - label: 'About Page'
        name: 'about'
        file: 'src/pages/about.md' # Example: create this file to see it appear
        fields:
          - { label: 'Title', name: 'title', widget: 'string' }
          - { label: 'Body', name: 'body', widget: 'markdown' }